name: Build & Deploy webapp (Next.js) to EC2
on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
# ───────────────────────────────────────── BUILD ─────────────────────────────────────────
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build Next.js
        run: npm run build           # creates .next/

      # ⬇︎  pack *everything* so docs/**, README.md, etc. are included
      - name: Create release archive
        run: |
          tar --exclude='.git' --exclude='node_modules' \
              -czf release.tgz .

      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: release.tgz

# ──────────────────────────────────────── DEPLOY ─────────────────────────────────────────
  deploy:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15               # safety net
    environment: production
    env:
      EC2_HOST: ${{ secrets.EC2_HOST }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build

      - name: Copy bundle to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: release.tgz
          target: /home/ec2-user/app
          overwrite: true

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euxo pipefail
            cd /home/ec2-user/app

            # unpack, replacing previous files but keeping release.tgz itself
            tar xzf release.tgz --overwrite

            # install prod-only deps, build once more if you need SSR assets
            npm ci --omit=dev
            npm run build

            # make sure the launcher is executable and start the server
            chmod +x start_next.sh
            ./start_next.sh &            # background so SSH can close

            exit 0                       # let the workflow finish
